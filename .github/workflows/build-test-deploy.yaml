name: Build, Test, and Deploy the Function App

on:
  push:
    branches:
      - develop
      - staging
      - master

  pull_request:
    branches:
      - develop

  workflow_dispatch:

concurrency:
  group: build-deploy-${{ github.ref }}
  cancel-in-progress: true

env:
  AZURE_FUNCTION_APP_PACKAGE_FOLDER: function-app-package # --------------------------------------------------- the folder in which to store the function app package
  BUILD_CONFIGURATION: Release # ------------------------------------------------------------------------------ the build configuration to use
  DOTNET_VERSION: 8.0.x # ------------------------------------------------------------------------------------- the .net version to use
  PUBLISH_OUTPUT_FOLDER: publish-output # --------------------------------------------------------------------- the folder in which to store the publish output
  PUBLISH_PROJECT_PATH: ./src/Kgm.ExampleNetEight.FunctionApp/Kgm.ExampleNetEight.FunctionApp.csproj # -------- the path to the project to publish
  SOLUTION_PATH: ./Kgm.ExampleNetEight.FunctionApp.sln # ------------------------------------------------------ the path to the solution *.sln file
  TEST_RESULTS_FOLDER: test-results # ------------------------------------------------------------------------- the folder in which to store the test results
  TEST_COVERAGE_SETTINGS_FILE_PATH: ./test/unit-tests/coverlet.runsettings # ---------------------------------- the path to the code coverage settings file

jobs:
  build-and-test:
    name: Build and test the Function App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET ${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install dependencies
        run: dotnet restore ${{ env.SOLUTION_PATH }}

      - name: Build
        run: >
          dotnet build
          --configuration ${{ env.BUILD_CONFIGURATION }}
          --no-restore
          ${{ env.SOLUTION_PATH }}

      - name: Test
        run: >
          dotnet test
          --configuration ${{ env.BUILD_CONFIGURATION }}
          --no-build
          --verbosity normal
          --results-directory ${{ env.TEST_RESULTS_FOLDER }}
          --logger trx
          --logger console
          --collect:"XPlat Code Coverage"
          ${{ env.SOLUTION_PATH }}

      - name: Publish
        run: >
          dotnet publish
          --configuration ${{ env.BUILD_CONFIGURATION }}
          --no-build
          --output ${{ env.PUBLISH_OUTPUT_FOLDER }}
          ${{ env.PUBLISH_PROJECT_PATH }}

      - name: Archive published function app
        uses: actions/upload-artifact@v4
        with:
          name: published-function-app
          path: ${{ env.PUBLISH_OUTPUT_FOLDER }}
          if-no-files-found: error

      - name: Directory listing
        run: ls
